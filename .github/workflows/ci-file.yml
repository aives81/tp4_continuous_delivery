name: TP4-CD

on:
  push:
    branches:
      - main
      - develop/yves
  pull_request:
    branches:
      - main

jobs:
#  unit-tests:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Setup java 21
#        uses: actions/setup-java@v4
#        with:
#            distribution: 'adopt'
#            java-version: '21'
#
#      - name: Install dependencies
#        run: ./mvnw install -DskipTests
#
#      - name: Run unit tests
#        run: ./mvnw test

#  build-on-docker-and-push-to-dockerhub:
#    needs: unit-tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Build Docker image
#        run: docker image build -t ${{ secrets.DOCKER_USERNAME }}/my_springboot_app:main -f Dockerfile .
#
#      - name: Push Docker image
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#        run: |
#          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
#          docker push $DOCKER_USERNAME/my_springboot_app:main

#  deploy-on-render:
#    needs: build-on-docker-and-push-to-dockerhub
#    runs-on: ubuntu-latest
#    steps:
#      - name: deploy on render.com
#        env:
#          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
#          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
#        run: |
#            curl -X POST \
#            -H "Authorization: Bearer $RENDER_API_KEY" \
#            -H "Content-Type: application/json" \
#            $RENDER_DEPLOY_HOOK

  generate-docs-and-deploy-on-netlify:
    runs-on: ubuntu-latest
#    needs: deploy-on-render
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Install dependencies
        run: ./mvnw install -DskipTests

      - name: Generate docs
        run: ./mvnw javadoc:javadoc

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: deploy on netlify
        env:
          NETLIFY_ACCESS_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy --prod --dir=target/site/apidocs --message "Deploying API documentation" --site=$NETLIFY_SITE_ID --auth=$NETLIFY_ACCESS_TOKEN